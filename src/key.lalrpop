use std::str::FromStr;
use crate::hotkey::*;
use std::collections::HashMap;

grammar;

match {
    "-",
    "ctrl",
    "control",
    "alt",
    "alternate",
    "option",
    "opt",
    "shift",
    "cmd",
    "command",
    "win",
    "window",
    "sys",
    "system",
    r"[A-Z]",
    // r"[0-9]+",

    // Don't skip whitespace; skip comments.
    r"\s*",
    // r"\s*" => { }, // <- That skips whitespace.
    r"//[^\n\r]*[\n\r]*" => { }, // `// comment`
    r"/\*([^\*]*\*+[^\*/])*([^\*]*\*+|[^\*])*\*/" => { }, // `/* comment */`
}

Mod: Modifiers = {
    "ctrl" => Modifiers::Control,
    "control" => Modifiers::Control,
    "alt" => Modifiers::Alt,
    "alternate" => Modifiers::Alt,
    "opt" => Modifiers::Alt,
    "option" => Modifiers::Alt,
    "shift" => Modifiers::Shift,
    "cmd" => Modifiers::System,
    "command" => Modifiers::System,
    "win" => Modifiers::System,
    "window" => Modifiers::System,
    "sys" => Modifiers::System,
    "system" => Modifiers::System,
};

pub Mods: Modifiers = {
    <l:Mods> "-" <r:Mod> => l | r,
    <m:Mod> => m,
}

Code: KeyCode = {
    // <letter:r"[A-Z]"> => lookup(letter),

}

pub KeyBind: Key = {
    <m:Mods> "-" <c:Code> => Key::new(c, m)
}

// Num: i32 = <s:r"[0-9]+"> => i32::from_str(s).unwrap();
